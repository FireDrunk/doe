---
- name: Enable COPR
  become: true
  become_user: root

  shell:
    cmd: "dnf copr enable -y atim/starship"
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name: Install Starship rpm package
  become: true
  become_user: root
  
  package:
    name: starship
    state: latest
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name: Install Starship snap package
  become: true
  become_user: root

  snap:
    name: starship
    channel: stable
    classic: true
    state: present
  when: ansible_distribution == "Ubuntu"

- name: Enable Starship in bashrc
  ansible.builtin.lineinfile:
    path: "~{{ user }}/.bashrc"
    line: "eval \"$(starship init bash)\""
    regexp: "eval \"$(starship init bash)\""

- name: Create Config directory
  ansible.builtin.file:
    state: directory
    path: "~{{ user }}/.config"

- name: Check if Starship Config exists
  ansible.builtin.stat:
    path: "~{{ user }}/.config/starship.toml"
  register: starship_config

- name: Ensure Starship Config exists
  ansible.builtin.file:
    state: touch
    path: "~{{ user }}/.config/starship.toml"
  when: not starship_config.stat.exists

- name: Ensure Starship Settings
  ansible.builtin.blockinfile:
    dest: "~{{ user }}/.config/starship.toml"
    content: |
      format = "$all"
      
      [kubernetes]
      disabled = false
      
      format = '[$context \(](dimmed green)[$namespace](blue)[\)](dimmed green) '
